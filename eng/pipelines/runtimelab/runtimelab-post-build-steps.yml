parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''

steps:
  # Copy all build output into artifacts staging directory
  - template: /eng/pipelines/libraries/prepare-publish-for-tests.yml

  # Zip CoreCLR Build Output
  - template: /eng/pipelines/common/upload-artifact-step.yml
    parameters:
      rootFolder: $(Build.SourcesDirectory)/artifacts/bin/coreclr/${{ parameters.osGroup }}.${{ parameters.archType }}.$(buildConfigUpper)
      archiveType: $(archiveType)
      tarCompression: $(tarCompression)
      includeRootFolder: false
      archiveExtension: $(archiveExtension)
      artifactName: CoreCLRProduct__${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}
      displayName: 'CoreCLR product build'

  # Zip Libraries Build Output
  - template: /eng/pipelines/common/upload-artifact-step.yml
    parameters:
      rootFolder: $(Build.ArtifactStagingDirectory)/artifacts
      archiveType: $(archiveType)
      tarCompression: $(tarCompression)
      includeRootFolder: false
      archiveExtension: $(archiveExtension)
      artifactName: libraries_bin_${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}
      displayName: Build Assets
